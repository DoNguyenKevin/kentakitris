// js/game-constants.js
// ======================================================
// ‚úÖ File n√†y ch·ª©a c√°c CON S·ªê KH√îNG THAY ƒê·ªîI c·ªßa game
// Con s·ªë kh√¥ng ƒë·ªïi = CONSTANT (ti·∫øng Anh)
// T·∫°i sao t√°ch ri√™ng? ƒê·ªÉ d·ªÖ ƒëi·ªÅu ch·ªânh v√† t√¨m ki·∫øm!
// ======================================================

// --- K·∫æT C·∫§U GAME BOARD (B√ÄN CH∆†I) ---

// ‚úÖ Chi·ªÅu r·ªông c·ªßa b√†n ch∆°i = 10 √¥
// Try it: Th·ª≠ ƒë·ªïi th√†nh 15 ƒë·ªÉ c√≥ b√†n ch∆°i r·ªông h∆°n!
export const BOARD_WIDTH = 10;

// ‚úÖ Chi·ªÅu cao c·ªßa b√†n ch∆°i = 20 √¥
// Try it: Th·ª≠ ƒë·ªïi th√†nh 25 ƒë·ªÉ c√≥ b√†n ch∆°i cao h∆°n!
export const BOARD_HEIGHT = 20;

// ‚úÖ K√≠ch th∆∞·ªõc khung hi·ªÉn th·ªã "m·∫£nh ti·∫øp theo" = 4x4 √¥
export const NEXT_GRID_SIZE = 4;

// --- ƒêI·ªÇM S·ªê V√Ä C·∫§P ƒê·ªò ---

// ‚úÖ ƒêi·ªÉm ƒë∆∞·ª£c c·ªông khi x√≥a 1 h√†ng = 10 ƒëi·ªÉm
// Try it: ƒê·ªïi th√†nh 100 ƒë·ªÉ ƒë∆∞·ª£c nhi·ªÅu ƒëi·ªÉm h∆°n!
export const SCORE_PER_LINE = 10;

// ‚úÖ S·ªë h√†ng c·∫ßn x√≥a ƒë·ªÉ l√™n c·∫•p = 10 h√†ng
// M·ªói khi l√™n c·∫•p, m·∫£nh r∆°i nhanh h∆°n!
export const LINES_PER_LEVEL = 10;

// ‚úÖ Th·ªùi gian r∆°i ban ƒë·∫ßu = 1000ms (1 gi√¢y)
// M·∫£nh s·∫Ω t·ª± ƒë·ªông r∆°i xu·ªëng m·ªói 1 gi√¢y
// Try it: ƒê·ªïi th√†nh 2000 ƒë·ªÉ ch∆°i ch·∫≠m h∆°n, ho·∫∑c 500 ƒë·ªÉ ch∆°i nhanh h∆°n!
export const INITIAL_DROP_DELAY = 1000; // ms (milliseconds = ph·∫ßn ng√†n gi√¢y)

// --- H√åNH D·∫†NG C√ÅC M·∫¢NH (TETROMINO SHAPES) ---

// ‚úÖ M·ªói m·∫£nh l√† m·ªôt m·∫£ng 2 chi·ªÅu (nh∆∞ b√†n c·ªù mini)
// S·ªë 1 = c√≥ √¥, s·ªë 0 = kh√¥ng c√≥ √¥
// C√≥ 7 h√¨nh d·∫°ng kh√°c nhau trong Tetris!

// ‚ùì Th·ª≠ nghi·ªám: H√£y v·∫Ω t·ª´ng h√¨nh tr√™n gi·∫•y ƒë·ªÉ hi·ªÉu r√µ h∆°n!
// V√≠ d·ª• h√¨nh T: 
//   0 1 0
//   1 1 1
//   0 0 0

// Tetromino shapes and their colors (color index 1-7)
export const SHAPES = [
    // 0: T-shape (H√¨nh ch·ªØ T)
    [[0, 1, 0], [1, 1, 1], [0, 0, 0],], 
    // 1: I-shape (H√¨nh que d√†i)
    [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0],], 
    // 2: J-shape (H√¨nh ch·ªØ J ng∆∞·ª£c)
    [[1, 0, 0], [1, 1, 1], [0, 0, 0],], 
    // 3: L-shape (H√¨nh ch·ªØ L)
    [[0, 0, 1], [1, 1, 1], [0, 0, 0],], 
    // 4: O-shape (H√¨nh vu√¥ng)
    [[1, 1], [1, 1],], 
    // 5: S-shape (H√¨nh ch·ªØ S)
    [[0, 1, 1], [1, 1, 0], [0, 0, 0],], 
    // 6: Z-shape (H√¨nh ch·ªØ Z)
    [[1, 1, 0], [0, 1, 1], [0, 0, 0],], 
];

// --- M√ÄU S·∫ÆC ---

// ‚úÖ M·ªói h√¨nh c√≥ 1 m√†u ri√™ng
// Index (s·ªë th·ª© t·ª±) t∆∞∆°ng ·ª©ng v·ªõi class CSS
// Index 0 = tr·ªëng (kh√¥ng c√≥ m√†u)

// The index in COLORS corresponds to the color-N class in CSS
export const COLORS = [
    null,       // Index 0 = √¥ tr·ªëng (kh√¥ng c√≥ m√†u)
    'color-1',  // T: M√†u h·ªìng
    'color-2',  // I: M√†u xanh l∆° (cyan)
    'color-3',  // J: M√†u xanh l√°
    'color-4',  // L: M√†u cam
    'color-5',  // O: M√†u v√†ng
    'color-6',  // S: M√†u ƒë·ªè
    'color-7',  // Z: M√†u t√≠m xanh
];

// ‚ùì C√¢u h·ªèi: T·∫°i sao c√≥ 7 h√¨nh nh∆∞ng l·∫°i c√≥ index t·ª´ 0-7 (8 s·ªë)?
// üí° Tr·∫£ l·ªùi: Index 0 d√†nh cho "√¥ tr·ªëng" tr√™n b√†n ch∆°i!
//            7 h√¨nh kh√°c d√πng index 1-7 ƒë·ªÉ ƒë·ªëi chi·∫øu v·ªõi m√†u.

